<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-04-07T21:14:20-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Mark Phillips</title><subtitle>American Americanist</subtitle><entry><title type="html">MEOW ERC-20 Token</title><link href="http://localhost:4000/compuglobalhypermegacorp/" rel="alternate" type="text/html" title="MEOW ERC-20 Token" /><published>2019-10-01T00:00:00-07:00</published><updated>2019-10-01T00:00:00-07:00</updated><id>http://localhost:4000/compuglobalhypermegacorp</id><content type="html" xml:base="http://localhost:4000/compuglobalhypermegacorp/">&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/meow.png&quot; alt=&quot;Mr. Whiskers&quot; style=&quot;width: 500px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://compuglobalhypermegacorp.com&quot;&gt;Compuglobalhypermegacorp&lt;/a&gt;’s CEO Mr. Whiskers’s World Domination Token, the MEOW Coin.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/compuglobalhypermegacorp&quot;&gt;Mr. Whiskers’ Whitepaper&lt;/a&gt; on &lt;strong&gt;Proof of Meow®&lt;/strong&gt; – provides solutions to classical computer science’s intractable problems including O(k^n), O(2^n), exponential; O(n!), factorial; and O(n^n ), super-exponential in “meow, hiss, purr, meow”.* &lt;a href=&quot;https://etherscan.io/token/0x4ed4DDd7981e347b673f697DC821965A3EB64b9c&quot;&gt;Etherscan.io&lt;/a&gt;&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/whitepaper001.jpg&quot; alt=&quot;white paper&quot; style=&quot;width: 500px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Read Mr. Whisker’s whitepaper outlining the mechanics of “meow, purr, hiss”.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pleasemarkdarkly/simpleblockchain&quot;&gt;Play with Mr. Whisker’s simple blockchain.&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">WSDOT Collision Predictions</title><link href="http://localhost:4000/wsdot/" rel="alternate" type="text/html" title="WSDOT Collision Predictions" /><published>2019-07-25T00:00:00-07:00</published><updated>2019-07-25T00:00:00-07:00</updated><id>http://localhost:4000/wsdot</id><content type="html" xml:base="http://localhost:4000/wsdot/">&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/accidents.png&quot; alt=&quot;accident modeling&quot; style=&quot;width: 500px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;To better understand accidents in the Northwest, I processed the WSDOT’s data on serious to fatal accidents. Specifically, I processed the WSDOT reported collisions and mapped them to the nearest intersections, ranked, color-coded our 500 top dangerous intersections and displayed them on a heatmap by the frequency of accidents by date and time.&lt;/p&gt;

&lt;p&gt;I requested WSDOT to provide Northwest collisions between 2015 through June 2018 which I parsed grouping by city and date, then used Alteryx to forecast by week accidents after which I use Python to weight each day afterwhich I feed into Tableau for visualization. The result is a map of our area that uses the current day to present locations which have been historically and forecasted to be probable for collisions.&lt;/p&gt;

&lt;p&gt;The code and dataset may be accessed &lt;a href=&quot;https://github.com/pleasemarkdarkly/wsdot_visualization&quot;&gt;here&lt;/a&gt;. The code consists of three scripts. The first one, “wsdot_parser.py”, will open the WSDOT dataset. Please note that the code assumes that the dataset will be on the same folder level and named “king.csv”. This script will generate two derived datasets: “weekday_coeffs.csv” and “weekly_table.csv”.&lt;/p&gt;

&lt;p&gt;The first is a table where the general probability of an accident per city and weekday (Monday-Sunday) is represented by a number (0 to 1). The second one is the aggregate accidents per week over the full dataset grouped by city. Each row represents a week and it just counts the number of accidents that happened on that week at that city.&lt;/p&gt;

&lt;p&gt;To do the actual forecast Alteryx Designed is required. The script provided (“arima_iter.yxmc”) will produce a forecast of accidents for the selected city (you must manually choose it in the Alteryx interface). This forecast is per week and each row represents a week for that city and is the result of an ARIMA model fit to the whole dataset per city and week.&lt;/p&gt;

&lt;p&gt;Once all the cities have a forecast then the Python script “merger.py” will produce the final forecast for the next 16 weeks starting on the last date found on the WSDOT dataset. The general forecast for a week is spread between the days of that week, weighting each day by the weekday coefficient previously computed. At the end, the file “full_forecast.csv” is produced as the final output. This file can feed Tableau to create a visualization.&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">docker_mac_apt</title><link href="http://localhost:4000/mac-apt/" rel="alternate" type="text/html" title="docker_mac_apt" /><published>2019-06-12T00:00:00-07:00</published><updated>2019-06-12T00:00:00-07:00</updated><id>http://localhost:4000/mac-apt</id><content type="html" xml:base="http://localhost:4000/mac-apt/">&lt;p&gt;&lt;a href=&quot;https://github.com/markedphillips/docker_mac_apt&quot;&gt;MacOSX forensic analysis framework containerized.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;mac_apt is a python based framework, which has plugins to process individual artifacts (such as Safari internet history, Network interfaces, Recently used files, Spotlight typed searches..) The framework does the heavy lifting, parsing of disk/volume image and offers a unified output interface, which currently supports writing out data as CSV, Sqlite and Excel formats. There is an API which plugins can use to access files and folders within the disk image. Currently DD and E01 images are supported. DMG files without compression work too. You can use a mounted image too (with limited support on windows for this feature). We even put in a native HFS parser adding support for lzvn/lzfse compressed files.&lt;/p&gt;</content><author><name></name></author><summary type="html">MacOSX forensic analysis framework containerized.</summary></entry><entry><title type="html">Greenplay Format</title><link href="http://localhost:4000/modpod/" rel="alternate" type="text/html" title="Greenplay Format" /><published>2006-01-01T00:00:00-08:00</published><updated>2006-01-01T00:00:00-08:00</updated><id>http://localhost:4000/modpod</id><content type="html" xml:base="http://localhost:4000/modpod/">&lt;p&gt;With the vision of creating an instore and at home experience for content distribution. Greenplay was an end-to-end system with content licensing, all North American music and Warner Brothers/Paramount video content, merchandising in-store DVD/HD-DVD/Bluray product sales, music downloads, and at home streaming content on Greenplay set top boxes. The below instore PODs and at home players were developed.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/pod.png&quot; alt=&quot;POD&quot; style=&quot;width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;A self-enclosed, flat-panel device for retailers to offer in-store sampling, purchasing and fulfillment of digital music and movies.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/greenplay.png&quot; alt=&quot;Greenplay&quot; style=&quot;width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Studio approved video content purchsae and rental through SD cards and PC peripherals, including $99 video player.&lt;/p&gt;

&lt;p&gt;In 2000, after the wide spread adoption of Napster and RIAA Lawsuits against the Rio mp3 player, large scale mp3 downloads was impacting the retail businesses behind content distribution.  One such company Transworld Entertainment hired me to develop hardware which enabled better recommendations and merchandising in store. The listening and viewing station was born and this system was the largest deployed of its kind, due entirely to the cost, power over ethernet, and deployment of the system. Transworld while innovative in merchadising, failed to follow through with a pure digital experience for their customers.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/lvs.png&quot; alt=&quot;LVS&quot; style=&quot;width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;In-store listening and viewing station that uses Windows Media technology to store and stream content; lets shoppers scan and preview any CD or DVD in retailer’s catalog and enables use cross merchandising, loyalty programs, point-of-sale integration, and chain-wide “try and buy”programs. Deployed in more than 600 stores and 13,000 stations and remains the world’s largest deployment of a listening solution technology.&lt;/p&gt;</content><author><name></name></author><summary type="html">With the vision of creating an instore and at home experience for content distribution. Greenplay was an end-to-end system with content licensing, all North American music and Warner Brothers/Paramount video content, merchandising in-store DVD/HD-DVD/Bluray product sales, music downloads, and at home streaming content on Greenplay set top boxes. The below instore PODs and at home players were developed.</summary></entry><entry><title type="html">SPOT and MSN Direct</title><link href="http://localhost:4000/spot/" rel="alternate" type="text/html" title="SPOT and MSN Direct" /><published>2005-01-01T00:00:00-08:00</published><updated>2005-01-01T00:00:00-08:00</updated><id>http://localhost:4000/spot</id><content type="html" xml:base="http://localhost:4000/spot/">&lt;p&gt;Microsoft’s Research &lt;a href=&quot;https://en.wikipedia.org/wiki/Smart_Personal_Objects_Technology&quot;&gt;Smart Personal Objects&lt;/a&gt; and the MSN Direct Network was in development from 2001 until launch in 2005. Showcased at Comdex in 2002. From 2001 through 2005, we worked on many aspects of the systemn.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/spot.jpg&quot; alt=&quot;MSN Direct&quot; style=&quot;width: 500px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Architecture that enables peer-to-peer communication between SPOT devices, specifically SPOT watches. Example channels include Peer to Peer Poker, Chat, and Eightball.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/dotnetcpu.jpg&quot; alt=&quot;.netcpu&quot; style=&quot;width: 500px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Commercial BASIC Stamp chip developed for educational purposes using portions of Microsoft’s SPOT technology to execute C# code and an embedded TinyCLR (Common Language Runtime).&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/datacard.jpg&quot; alt=&quot;datacard&quot; style=&quot;width: 500px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Credit card sized PDA with touch pad.&lt;/p&gt;</content><author><name></name></author><summary type="html">Microsoft’s Research Smart Personal Objects and the MSN Direct Network was in development from 2001 until launch in 2005. Showcased at Comdex in 2002. From 2001 through 2005, we worked on many aspects of the systemn.</summary></entry><entry><title type="html">Digital Stereo Audio Development Platform</title><link href="http://localhost:4000/dharma-development/" rel="alternate" type="text/html" title="Digital Stereo Audio Development Platform" /><published>1999-06-01T00:00:00-07:00</published><updated>1999-06-01T00:00:00-07:00</updated><id>http://localhost:4000/dharma-development</id><content type="html" xml:base="http://localhost:4000/dharma-development/">&lt;p&gt;Combining the experience of all the peicemeal portable audio devices and the lack of digital media systems for the stereo system, we needed a platform to develop our &lt;a href=&quot;https://github.com/pleasemarkdarkly/adotcorporation&quot;&gt;Digital Media Operating System&lt;/a&gt;.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/dharma.jpg&quot; alt=&quot;digital audio platform&quot; style=&quot;width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Fully developed portable stereo reference platform that provides a turnkey solution for digital audio integration into consumer electronics systems, computer peripherals, portable audio players, or home stereo systems.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/maverick_chip.jpg&quot; alt=&quot;maverick audio platform&quot; style=&quot;width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Hardware platform for prototyping digital media appliances that enables the development of a broad range of digital audio products (portable digital audio players, Internet radios, digital audio receivers, digital home jukebox systems, and digital car stereos) using a common interoperable design. Based on Cirrus Logic’s Maverick family of microprocessors.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/dj.jpg&quot; alt=&quot;DJ&quot; style=&quot;width: 500px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Easy-to-use digital music player that combines the clarity of digital audio with the power and fidelity of home stereo. Enables consumers to play and record music from CDs, tapes, records, or digital file formats (MP3, WMA, and AAC) and to display album, artist, and song title, and to store and browse 1000 CDs, and record albums and tapes.&lt;/p&gt;</content><author><name></name></author><summary type="html">Combining the experience of all the peicemeal portable audio devices and the lack of digital media systems for the stereo system, we needed a platform to develop our Digital Media Operating System.</summary></entry><entry><title type="html">Portable Media Players (1998-2002)</title><link href="http://localhost:4000/mediaplayer/" rel="alternate" type="text/html" title="Portable Media Players (1998-2002)" /><published>1999-01-01T00:00:00-08:00</published><updated>1999-01-01T00:00:00-08:00</updated><id>http://localhost:4000/mediaplayer</id><content type="html" xml:base="http://localhost:4000/mediaplayer/">&lt;p&gt;In 1998 I was curious why on how to get mp3 to play back on embedded devices. The first 6 months to a year were full of failures. Processors were not powerful enough, storage was expensive, there was no business case. Nonetheless I built a fixed function player from a breadboard in 1998 the below products followed. The entire source code for embedded media players can be found &lt;a href=&quot;https://github.com/pleasemarkdarkly/adotcorporation&quot;&gt;here&lt;/a&gt;. I was lucky enough to work with super smart engineers while I developed business cases and partners.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/iomega.jpg&quot; alt=&quot;Hipzip&quot; style=&quot;width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;One of the firsts multi-codec mp3 players created with removable media - the Clik! drive. The software stack for the Iomega Hipzip, built upon eCos which was called Dadio OS, source code &lt;a href=&quot;https://github.com/pleasemarkdarkly/iomega_hipzip&quot;&gt;here&lt;/a&gt;.  The player supported MP3, WMA, and Ogg Vorbis formats.  This device and the IBM 120 MB CF drive were the examplars for the Playlist and buffering patents.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/playlist.png&quot; alt=&quot;Playlist&quot; style=&quot;width: 400px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Checkout the manual &lt;a href=&quot;/uploads/hipzip.pdf&quot;&gt;Iomega Hipzip Manual&lt;/a&gt;. Iomega Hipzip Manual.  In 1998, unfortunately, USB was pretty new, so using the mass storage specification for mounting the Hipzip made absolutely sense, most mp3 players required some specific drivers to interact with a desktop Jukebox.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/ibm340.png&quot; alt=&quot;IBM120&quot; style=&quot;width: 300px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;First spinning media player developed using the IBM miniature hard drive.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/mediadevice.png&quot; alt=&quot;Media Device&quot; style=&quot;width: 300px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Digital audio operating system for portable music players that allows MP3 and other music file formats to be played interchangeably; an interoperable platform offered in 16-bit and 32-bit configurations and aimed at lightweight, miniature player designs where long battery life and low cost are essential; allowed management of complex features including high capacity storage, high bandwidth transmission, and embedded database management. &lt;a href=&quot;https://github.com/pleasemarkdarkly/adotcorporation&quot;&gt;Complete Digital Audio OS Source Code&lt;/a&gt;&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/mediaplayer.png&quot; alt=&quot;Windows Media Player for CE&quot; style=&quot;width: 300px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Our early work in optimizing the mp3 decoder for NECVR4111 and VR4121 paid off by being acquired by Microsoft for the Windows Media Player for Windows CE.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/autopc.png&quot; alt=&quot;AutoPC&quot; style=&quot;width: 500px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Microsoft’s First Generation AutoPC running the Hitachi SH3 Processor. &lt;a href=&quot;https://github.com/pleasemarkdarkly/adotcorporation&quot;&gt;SH3 Optimized MP3 Layer&lt;/a&gt;.
Experimental AutoPC Digital Media Player.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/micronas.png&quot; alt=&quot;Micronas&quot; style=&quot;width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Bread board of the first mp3 player I wired and programmed.&lt;/p&gt;</content><author><name></name></author><summary type="html">In 1998 I was curious why on how to get mp3 to play back on embedded devices. The first 6 months to a year were full of failures. Processors were not powerful enough, storage was expensive, there was no business case. Nonetheless I built a fixed function player from a breadboard in 1998 the below products followed. The entire source code for embedded media players can be found here. I was lucky enough to work with super smart engineers while I developed business cases and partners.</summary></entry></feed>